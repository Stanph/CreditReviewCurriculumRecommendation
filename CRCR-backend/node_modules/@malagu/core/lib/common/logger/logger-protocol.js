"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var log = require("loglevel");
var annotation_1 = require("../annotation");
exports.LOGGER_CONFIG = 'malagu.logger';
exports.Logger = Symbol('Logger');
var LoggerImpl = /** @class */ (function () {
    function LoggerImpl(config) {
        this.config = config;
        if (config.level) {
            log.setLevel(config.level);
        }
        else {
            log.setLevel('error');
        }
    }
    LoggerImpl.prototype.error = function (message, context) {
        if (context === void 0) { context = ''; }
        return log.error(message, context);
    };
    LoggerImpl.prototype.info = function (message, context) {
        if (context === void 0) { context = ''; }
        return log.info(message, context);
    };
    LoggerImpl.prototype.warn = function (message, context) {
        if (context === void 0) { context = ''; }
        return log.warn(message, context);
    };
    LoggerImpl.prototype.debug = function (message, context) {
        if (context === void 0) { context = ''; }
        return log.debug(message, context);
    };
    LoggerImpl = __decorate([
        annotation_1.Component(exports.Logger),
        __param(0, annotation_1.Value(exports.LOGGER_CONFIG)),
        __metadata("design:paramtypes", [Object])
    ], LoggerImpl);
    return LoggerImpl;
}());
exports.LoggerImpl = LoggerImpl;
//# sourceMappingURL=logger-protocol.js.map