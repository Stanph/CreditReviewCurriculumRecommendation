export declare const VALUE: unique symbol;
export interface ValueOption {
    el?: string;
    detached?: boolean;
}
export declare namespace ValueOption {
    function is(option: any): option is ValueOption;
}
export interface ValueDecorator {
    (elOrValueOption?: string | ValueOption): (target: any, targetKey: string, index?: number) => any;
    (target: any, targetKey: string, index?: number): any;
}
export declare const Value: ValueDecorator;
export declare function getValueOption(target: any, targetKey: string, index?: number): ValueOption;
export declare function applyValueDecorator(option: ValueOption, target: any, targetKey: string, index?: number): void;
export declare function createValueProperty(option: ValueOption, target: any, property: string): void;
//# sourceMappingURL=value.d.ts.map