"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var paths = require("path");
var json_file_1 = require("./json-file");
var npm_registry_1 = require("./npm-registry");
var package_protocol_1 = require("./package-protocol");
var component_package_collector_1 = require("./component-package-collector");
var mergeWith = require("lodash.mergewith");
var constants_1 = require("../constants");
var component_config_loader_1 = require("./component-config-loader");
var component_package_resolver_1 = require("./component-package-resolver");
var fs_extra_1 = require("fs-extra");
var chalk = require('chalk');
var yaml = require("js-yaml");
// tslint:disable:no-implicit-dependencies
// tslint:disable-next-line:no-any
var ApplicationPackage = /** @class */ (function () {
    function ApplicationPackage(options) {
        this.options = options;
        this.componentPackageLoader = new component_config_loader_1.ComponentPackageLoader(this);
        this.componentPackageResolver = new component_package_resolver_1.ComponentPackageResolver(this);
        this.projectPath = options.projectPath;
        this.log = options.log || console.log.bind(console);
        this.error = options.error || console.error.bind(console);
    }
    Object.defineProperty(ApplicationPackage.prototype, "props", {
        get: function () {
            var e_1, _a;
            if (this._props) {
                return this._props;
            }
            var props = {};
            try {
                for (var _b = __values(this.componentPackages), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var componentPackage = _c.value;
                    var component = componentPackage.malaguComponent;
                    if (component) {
                        props = mergeWith(props, component, package_protocol_1.customizer);
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
            return props;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ApplicationPackage.prototype, "rootConfig", {
        get: function () {
            if (this._rootConfig) {
                return this._rootConfig;
            }
            if (fs_extra_1.existsSync(this.path(constants_1.CONFIG_FILE))) {
                this._rootConfig = yaml.load(fs_extra_1.readFileSync(this.path(constants_1.CONFIG_FILE), { encoding: 'utf8' }));
            }
            if (this._rootConfig && !this._rootConfig.malagu) {
                this._rootConfig.malagu = {};
            }
            return this._rootConfig || { malagu: {} };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ApplicationPackage.prototype, "frontendConfig", {
        get: function () {
            if (this._frontendConfig) {
                return this._frontendConfig;
            }
            var config = __assign({}, this.props);
            delete config.backend;
            delete config.frontend;
            this._frontendConfig = mergeWith(config, this.props.frontend, package_protocol_1.customizer);
            var mode = this._frontendConfig.mode || [];
            if (!Array.isArray(mode)) {
                mode = [mode];
            }
            this._frontendConfig.mode = Array.from(new Set(__spread(mode, this.options.mode)));
            return this._frontendConfig;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ApplicationPackage.prototype, "backendConfig", {
        get: function () {
            if (this._backendConfig) {
                return this._backendConfig;
            }
            var config = __assign({}, this.props);
            delete config.backend;
            delete config.frontend;
            this._backendConfig = mergeWith(config, this.props.backend, package_protocol_1.customizer);
            var mode = this._backendConfig.mode || [];
            if (!Array.isArray(mode)) {
                mode = [mode];
            }
            this._backendConfig.mode = Array.from(new Set(__spread(mode, this.options.mode)));
            ;
            return this._backendConfig;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ApplicationPackage.prototype, "pkg", {
        get: function () {
            if (!this._pkg) {
                this._pkg = json_file_1.readJsonFile(this.packagePath);
                this._pkg.name = this._pkg.name || paths.basename(this.projectPath);
                this._pkg.name = this._pkg.name || 'latest';
            }
            return this._pkg;
        },
        enumerable: true,
        configurable: true
    });
    ApplicationPackage.prototype.rootComponentPackage = function () {
        if (!this._rootComponentPackage) {
            this.pkg.malaguComponent = {};
            this.componentPackageLoader.load(this.pkg, this.options.mode);
            this._rootComponentPackage = this.newComponentPackage(this.pkg);
        }
        return this._rootComponentPackage;
    };
    Object.defineProperty(ApplicationPackage.prototype, "componentPackages", {
        /**
         * Component packages in the topological order.
         */
        get: function () {
            var e_2, _a, e_3, _b, e_4, _c, e_5, _d;
            if (!this._componentPackages) {
                var modeForConfig = this.rootComponentPackage().malaguComponent.mode;
                modeForConfig = Array.isArray(modeForConfig) ? modeForConfig : modeForConfig ? [modeForConfig] : [];
                var modeForOption = this.options.mode;
                var merged = Array.from(new Set(__spread(modeForConfig, modeForOption)));
                try {
                    for (var merged_1 = __values(merged), merged_1_1 = merged_1.next(); !merged_1_1.done; merged_1_1 = merged_1.next()) {
                        var mode = merged_1_1.value;
                        console.log(chalk(templateObject_1 || (templateObject_1 = __makeTemplateObject(["malagu {yellow.bold mode} - ", ""], ["malagu {yellow.bold mode} - ", ""])), mode));
                    }
                }
                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                finally {
                    try {
                        if (merged_1_1 && !merged_1_1.done && (_a = merged_1.return)) _a.call(merged_1);
                    }
                    finally { if (e_2) throw e_2.error; }
                }
                var collector = new component_package_collector_1.ComponentPackageCollector(this, merged);
                this._componentPackages = collector.collect(this.pkg);
                this._componentPackages.push(this.rootComponentPackage());
                try {
                    for (var _e = __values(this._componentPackages), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var componentPackage = _f.value;
                        this.componentPackageResolver.resolve(componentPackage);
                    }
                }
                catch (e_3_1) { e_3 = { error: e_3_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_3) throw e_3.error; }
                }
                try {
                    for (var _g = __values(this._componentPackages), _h = _g.next(); !_h.done; _h = _g.next()) {
                        var componentPackage = _h.value;
                        var malaguComponent = componentPackage.malaguComponent;
                        try {
                            for (var _j = (e_5 = void 0, __values(__spread(malaguComponent.frontend.modules || [], malaguComponent.backend.modules || []))), _k = _j.next(); !_k.done; _k = _j.next()) {
                                var modulePath = _k.value;
                                console.log(chalk(templateObject_2 || (templateObject_2 = __makeTemplateObject(["malagu {cyan.bold module} - ", "/", ""], ["malagu {cyan.bold module} - ", "/", ""])), componentPackage.name, modulePath));
                            }
                        }
                        catch (e_5_1) { e_5 = { error: e_5_1 }; }
                        finally {
                            try {
                                if (_k && !_k.done && (_d = _j.return)) _d.call(_j);
                            }
                            finally { if (e_5) throw e_5.error; }
                        }
                    }
                }
                catch (e_4_1) { e_4 = { error: e_4_1 }; }
                finally {
                    try {
                        if (_h && !_h.done && (_c = _g.return)) _c.call(_g);
                    }
                    finally { if (e_4) throw e_4.error; }
                }
            }
            return this._componentPackages;
        },
        enumerable: true,
        configurable: true
    });
    ApplicationPackage.prototype.getComponentPackage = function (component) {
        return this.componentPackages.find(function (pkg) { return pkg.name === component; });
    };
    ApplicationPackage.prototype.findComponentPackage = function (component) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getComponentPackage(component)];
            });
        });
    };
    ApplicationPackage.prototype.newComponentPackage = function (raw) {
        raw.malaguComponent = raw.malaguComponent || {};
        raw.malaguComponent.frontend = raw.malaguComponent.frontend || {};
        raw.malaguComponent.backend = raw.malaguComponent.backend || {};
        return new package_protocol_1.ComponentPackage(raw);
    };
    Object.defineProperty(ApplicationPackage.prototype, "frontendModules", {
        get: function () {
            if (!this._frontendModules) {
                this._frontendModules = this.computeModules('modules', constants_1.FRONTEND_TARGET);
            }
            return this._frontendModules;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ApplicationPackage.prototype, "backendModules", {
        get: function () {
            if (!this._backendModules) {
                this._backendModules = this.computeModules('modules', constants_1.BACKEND_TARGET);
            }
            return this._backendModules;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ApplicationPackage.prototype, "frontendAssets", {
        get: function () {
            if (!this._frontendAssets) {
                this._frontendAssets = this.computeModules('assets', constants_1.FRONTEND_TARGET);
            }
            return this._frontendAssets;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ApplicationPackage.prototype, "backendAssets", {
        get: function () {
            if (!this._backendAssets) {
                this._backendAssets = this.computeModules('assets', constants_1.BACKEND_TARGET);
            }
            return this._backendAssets;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ApplicationPackage.prototype, "initHookModules", {
        get: function () {
            if (!this._initHookModules) {
                this._initHookModules = this.computeModules('initHooks');
            }
            return this._initHookModules;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ApplicationPackage.prototype, "buildHookModules", {
        get: function () {
            if (!this._buildHookModules) {
                this._buildHookModules = this.computeModules('buildHooks');
            }
            return this._buildHookModules;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ApplicationPackage.prototype, "serveHookModules", {
        get: function () {
            if (!this._serveHookModules) {
                this._serveHookModules = this.computeModules('serveHooks');
            }
            return this._serveHookModules;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ApplicationPackage.prototype, "deployHookModules", {
        get: function () {
            if (!this._deployHookModules) {
                this._deployHookModules = this.computeModules('deployHooks');
            }
            return this._deployHookModules;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ApplicationPackage.prototype, "webpackHookModules", {
        get: function () {
            if (!this._webpackHookModules) {
                this._webpackHookModules = this.computeModules('webpackHooks');
            }
            return this._webpackHookModules;
        },
        enumerable: true,
        configurable: true
    });
    ApplicationPackage.prototype.isRoot = function (componentPackage) {
        if (componentPackage.name === this.pkg.name) {
            return true;
        }
        return false;
    };
    ApplicationPackage.prototype.computeModules = function (type, target) {
        var e_6, _a, e_7, _b;
        var result = new Map();
        var moduleIndex = 1;
        try {
            for (var _c = __values(this.componentPackages), _d = _c.next(); !_d.done; _d = _c.next()) {
                var componentPackage = _d.value;
                var component = componentPackage.malaguComponent;
                if (component) {
                    var modulePaths = (target ? component[target][type] : component[type]) || [];
                    try {
                        for (var modulePaths_1 = (e_7 = void 0, __values(modulePaths)), modulePaths_1_1 = modulePaths_1.next(); !modulePaths_1_1.done; modulePaths_1_1 = modulePaths_1.next()) {
                            var modulePath = modulePaths_1_1.value;
                            if (typeof modulePath === 'string') {
                                var componentPath = void 0;
                                if (componentPackage.name === this.pkg.name) {
                                    componentPath = paths.join(paths.resolve(this.projectPath), modulePath).split(paths.sep).join('/');
                                }
                                else {
                                    componentPath = paths.join(componentPackage.name, modulePath).split(paths.sep).join('/');
                                }
                                result.set(componentPackage.name, componentPath);
                                moduleIndex = moduleIndex + 1;
                            }
                        }
                    }
                    catch (e_7_1) { e_7 = { error: e_7_1 }; }
                    finally {
                        try {
                            if (modulePaths_1_1 && !modulePaths_1_1.done && (_b = modulePaths_1.return)) _b.call(modulePaths_1);
                        }
                        finally { if (e_7) throw e_7.error; }
                    }
                }
            }
        }
        catch (e_6_1) { e_6 = { error: e_6_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_6) throw e_6.error; }
        }
        return result;
    };
    ApplicationPackage.prototype.relative = function (path) {
        return paths.relative(this.projectPath, path);
    };
    ApplicationPackage.prototype.path = function () {
        var segments = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            segments[_i] = arguments[_i];
        }
        return paths.resolve.apply(paths, __spread([this.projectPath], segments));
    };
    Object.defineProperty(ApplicationPackage.prototype, "packagePath", {
        get: function () {
            return this.path('package.json');
        },
        enumerable: true,
        configurable: true
    });
    ApplicationPackage.prototype.lib = function () {
        var segments = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            segments[_i] = arguments[_i];
        }
        return this.path.apply(this, __spread(['lib'], segments));
    };
    ApplicationPackage.prototype.setDependency = function (name, version) {
        var dependencies = this.pkg.dependencies || {};
        var currentVersion = dependencies[name];
        if (currentVersion === version) {
            return false;
        }
        if (version) {
            dependencies[name] = version;
        }
        else {
            delete dependencies[name];
        }
        this.pkg.dependencies = npm_registry_1.sortByKey(dependencies);
        return true;
    };
    Object.defineProperty(ApplicationPackage.prototype, "resolveModule", {
        /**
         * A node module resolver in the context of the application package.
         */
        get: function () {
            if (!this._moduleResolver) {
                var resolutionPaths_1 = [this.packagePath || process.cwd()];
                this._moduleResolver = function (modulePath) { return require.resolve(modulePath, { paths: resolutionPaths_1 }); };
            }
            return this._moduleResolver;
        },
        enumerable: true,
        configurable: true
    });
    ApplicationPackage.prototype.resolveModulePath = function (moduleName) {
        var segments = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            segments[_i - 1] = arguments[_i];
        }
        return paths.resolve.apply(paths, __spread([this.resolveModule(moduleName + '/package.json'), '..'], segments));
    };
    return ApplicationPackage;
}());
exports.ApplicationPackage = ApplicationPackage;
var templateObject_1, templateObject_2;
//# sourceMappingURL=application-package.js.map