"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var constants_1 = require("../../constants");
function generateImports(modules, fn) {
    var targetModules = [];
    targetModules = modules.map(function (m) {
        if (fn === 'require') {
            return "Promise.resolve(require('" + m + "'))";
        }
        return fn + "('" + m + "')";
    });
    return targetModules.map(function (m) { return "then(function () { return " + m + ".then(load) })"; }).join('.\n');
}
function generateFrontendComponents(modules) {
    return "\nrequire('es6-promise/auto');\nrequire('reflect-metadata');\nconst { Container } = require('inversify');\nconst { FrontendApplication } = require('@malagu/core/lib/browser');\nconst { CoreFrontendModule } = require('@malagu/core/lib/browser/module');\n\nconst container = new Container();\ncontainer.load(CoreFrontendModule);\n\nfunction load(raw) {\n  return Promise.resolve(raw.default).then(module => container.load(module));\n}\n\nmodule.exports.container = Promise.resolve()\n  ." + generateImports(modules, 'import') + "\n  .then(() => container).catch(reason => {\n    console.error('Failed to start the frontend application.');\n    if (reason) {\n      console.error(reason);\n    }\n  });";
}
function generateBackendComponents(modules) {
    return "\nrequire('reflect-metadata');\nconst { Container } = require('inversify');\nconst { CoreBackendModule } = require('@malagu/core/lib/node/module');\nrequire('source-map-support').install();\n\nconst container = new Container();\ncontainer.load(CoreBackendModule);\n\nfunction load(raw) {\n  return Promise.resolve(raw.default).then(module => container.load(module));\n}\n\nmodule.exports.container = Promise.resolve()\n  ." + generateImports(modules, 'require') + "\n  .then(() => container).catch(reason => {\n\t  console.error('Failed to start the backend application.');\n    if (reason) {\n      console.error(reason);\n    }\n  });";
}
var componentLoader = function (source, sourceMap) {
    var _a = this.query, target = _a.target, modules = _a.modules;
    if (target === constants_1.FRONTEND_TARGET) {
        this.callback(undefined, "\n        " + source + "\n        " + generateFrontendComponents(modules) + "\n        ", sourceMap);
    }
    else {
        this.callback(undefined, "\n        " + source + "\n        " + generateBackendComponents(modules) + "\n        ", sourceMap);
    }
};
exports.default = componentLoader;
//# sourceMappingURL=component-loader.js.map