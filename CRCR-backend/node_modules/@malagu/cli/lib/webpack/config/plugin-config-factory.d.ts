import * as webpack from 'webpack';
import { CliContext } from '../../context';
export declare class CopyWepackPluginConfigFactory {
    create(config: any, context: CliContext, target: string): {
        plugins: any[];
    };
    support(context: CliContext, target: string): boolean;
}
export declare class EnvironmentPluginConfigFactory {
    create(config: any, context: CliContext, target: string): {
        plugins: webpack.EnvironmentPlugin[];
    };
    support(context: CliContext, target: string): boolean;
}
export declare class ForkTsCheckerWebpackPluginConfigFactory {
    create(config: any, context: CliContext, target: string): {
        plugins: any[];
    };
    support(context: CliContext, target: string): boolean;
}
export declare class HardSourceWebpackPluginConfigFactory {
    create(config: any, context: CliContext, target: string): {
        plugins: any[];
    };
    support(context: CliContext, target: string): boolean;
}
export declare class HtmlWebpackPluginConfigFactory {
    create(config: any, context: CliContext, target: string): {
        plugins: any[];
    };
    support(context: CliContext, target: string): boolean;
}
export declare class HtmlWebpackTagsPluginConfigFactory {
    create(config: any, context: CliContext, target: string): {
        plugins: any[];
    };
    support(context: CliContext, target: string): boolean;
}
//# sourceMappingURL=plugin-config-factory.d.ts.map