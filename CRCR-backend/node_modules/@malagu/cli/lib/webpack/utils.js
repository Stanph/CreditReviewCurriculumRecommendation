"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var constants_1 = require("../constants");
var path = require("path");
var url = require('url');
var ip = require('internal-ip');
var chalk = require('chalk');
function getUri(options) {
    var protocol = options.https ? 'https' : 'http';
    var hostname = options.useLocalIp
        ? ip.v4.sync() || 'localhost'
        : options.host || 'localhost';
    var port = options.socket ? 0 : options.port;
    if (options.public) {
        return /^[a-zA-Z]+:\/\//.test(options.public)
            ? "" + options.public
            : protocol + "://" + options.public;
    }
    return url.format({
        protocol: protocol,
        hostname: hostname,
        port: port
    });
}
exports.getUri = getUri;
function getDevSuccessInfo(options, name) {
    var uri = getUri(options);
    var infos = [];
    if (options.socket) {
        infos.push("Listening to socket at " + chalk.green(options.socket));
    }
    else {
        infos.push("The " + chalk.yellow.bold(name) + " is running at " + chalk.green(uri));
    }
    if (options.historyApiFallback) {
        infos.push("404s will fallback to " + chalk.green(options.historyApiFallback.index || '/index.html'));
    }
    if (options.bonjour) {
        chalk.green('Broadcasting "http" with subtype of "webpack" via ZeroConf DNS (Bonjour)');
    }
    return infos;
}
exports.getDevSuccessInfo = getDevSuccessInfo;
function getWebpackConfig(pkg, target) {
    return getMalaguConfig(pkg, target).webpack || {};
}
exports.getWebpackConfig = getWebpackConfig;
function getMalaguConfig(pkg, target) {
    return getConfig(pkg, target).malagu || {};
}
exports.getMalaguConfig = getMalaguConfig;
function getConfig(pkg, target) {
    return pkg[target + "Config"] || {};
}
exports.getConfig = getConfig;
function support(pkg, target) {
    var targets = pkg[target + "Config"].targets || [constants_1.FRONTEND_TARGET, constants_1.BACKEND_TARGET];
    return pkg[target + "Modules"].size > 0 && targets.includes(target);
}
exports.support = support;
function getPort(pkg, target, port) {
    if (port !== undefined) {
        return port;
    }
    var server = getConfig(pkg, target).server || { port: 3000 };
    return server.port;
}
exports.getPort = getPort;
function getHomePath(pkg, target) {
    return path.resolve(pkg.projectPath, '.malagu', target);
}
exports.getHomePath = getHomePath;
//# sourceMappingURL=utils.js.map