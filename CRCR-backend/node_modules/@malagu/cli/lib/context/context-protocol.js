"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
var package_1 = require("../package");
var package_2 = require("../package");
var path_1 = require("path");
var webpack_1 = require("../webpack");
var util_1 = require("../util");
var CliContext;
(function (CliContext) {
    function create(program, mode, projectPath) {
        if (mode === void 0) { mode = []; }
        if (projectPath === void 0) { projectPath = process.cwd(); }
        return __awaiter(this, void 0, void 0, function () {
            var pkg, malagu;
            return __generator(this, function (_a) {
                // at this point, we will check the core package version in the *.lock file firstly
                util_1.checkPkgVersionConsistency('@malagu/core', projectPath);
                pkg = new package_1.ApplicationPackage({ projectPath: projectPath, mode: mode });
                if (!package_2.RawComponentPackage.is(pkg.pkg)) {
                    malagu = pkg.pkg.malagu;
                    if (malagu && malagu.rootComponent) {
                        pkg = new package_1.ApplicationPackage({ projectPath: path_1.join(projectPath, malagu.rootComponent), mode: mode });
                    }
                }
                return [2 /*return*/, {
                        pkg: pkg,
                        program: program
                    }];
            });
        });
    }
    CliContext.create = create;
})(CliContext = exports.CliContext || (exports.CliContext = {}));
var HookContext;
(function (HookContext) {
    function create(cliContext) {
        return __awaiter(this, void 0, void 0, function () {
            var configFactory, configurations;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        configFactory = new webpack_1.ConfigFactory();
                        return [4 /*yield*/, configFactory.create(cliContext)];
                    case 1:
                        configurations = _a.sent();
                        return [2 /*return*/, __assign(__assign({}, cliContext), { dest: 'dist', configurations: configurations })];
                }
            });
        });
    }
    HookContext.create = create;
    function getConfiguration(target, configurations) {
        var e_1, _a;
        try {
            for (var configurations_1 = __values(configurations), configurations_1_1 = configurations_1.next(); !configurations_1_1.done; configurations_1_1 = configurations_1.next()) {
                var c = configurations_1_1.value;
                if (c.name === target) {
                    return c;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (configurations_1_1 && !configurations_1_1.done && (_a = configurations_1.return)) _a.call(configurations_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
    }
    HookContext.getConfiguration = getConfiguration;
})(HookContext = exports.HookContext || (exports.HookContext = {}));
//# sourceMappingURL=context-protocol.js.map