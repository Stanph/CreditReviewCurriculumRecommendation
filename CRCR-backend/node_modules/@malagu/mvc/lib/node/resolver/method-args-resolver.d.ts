import { MethodArgsResolver } from './resolver-protocol';
export declare class BodyMethodArgsResolver implements MethodArgsResolver {
    readonly priority = 100;
    resolve(metadata: any, args: any[]): Promise<void>;
}
export declare class HeaderMethodArgsResolver implements MethodArgsResolver {
    readonly priority = 200;
    resolve(metadata: any, args: any[]): Promise<void>;
}
export declare class ParamMethodArgsResolver implements MethodArgsResolver {
    readonly priority = 300;
    resolve(metadata: any, args: any[]): Promise<void>;
}
export declare class QueryMethodArgsResolver implements MethodArgsResolver {
    readonly priority = 400;
    resolve(metadata: any, args: any[]): Promise<void>;
}
export declare class CookieMethodArgsResolver implements MethodArgsResolver {
    readonly priority = 500;
    resolve(metadata: any, args: any[]): Promise<void>;
}
export declare class SessionMethodArgsResolver implements MethodArgsResolver {
    readonly priority = 600;
    resolve(metadata: any, args: any[]): Promise<void>;
}
//# sourceMappingURL=method-args-resolver.d.ts.map