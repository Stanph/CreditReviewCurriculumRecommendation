"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@malagu/core");
var web_1 = require("@malagu/web");
var node_1 = require("@malagu/web/lib/node");
var resolver_1 = require("../resolver");
var handler_protocol_1 = require("./handler-protocol");
var common_1 = require("../../common");
var core_2 = require("@malagu/core");
var node_2 = require("@malagu/web/lib/node");
var MvcHandlerAdapter = /** @class */ (function () {
    function MvcHandlerAdapter() {
        this.priority = handler_protocol_1.MVC_HANDLER_ADAPTER_PRIORITY;
    }
    MvcHandlerAdapter.prototype.resolveMethodArgs = function (metadata) {
        return __awaiter(this, void 0, void 0, function () {
            var args, _a, _b, resolver, e_1_1;
            var e_1, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        args = [];
                        _d.label = 1;
                    case 1:
                        _d.trys.push([1, 6, 7, 8]);
                        _a = __values(this.methodArgsResolverProvider.provide()), _b = _a.next();
                        _d.label = 2;
                    case 2:
                        if (!!_b.done) return [3 /*break*/, 5];
                        resolver = _b.value;
                        return [4 /*yield*/, resolver.resolve(metadata, args)];
                    case 3:
                        _d.sent();
                        _d.label = 4;
                    case 4:
                        _b = _a.next();
                        return [3 /*break*/, 2];
                    case 5: return [3 /*break*/, 8];
                    case 6:
                        e_1_1 = _d.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 8];
                    case 7:
                        try {
                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                        }
                        finally { if (e_1) throw e_1.error; }
                        return [7 /*endfinally*/];
                    case 8: return [2 /*return*/, args];
                }
            });
        });
    };
    MvcHandlerAdapter.prototype.resolveResponse = function (metadata) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, _b, resolver, e_2_1;
            var e_2, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        _d.trys.push([0, 5, 6, 7]);
                        _a = __values(this.responseResolverProvider.provide()), _b = _a.next();
                        _d.label = 1;
                    case 1:
                        if (!!_b.done) return [3 /*break*/, 4];
                        resolver = _b.value;
                        return [4 /*yield*/, resolver.resolve(metadata)];
                    case 2:
                        _d.sent();
                        _d.label = 3;
                    case 3:
                        _b = _a.next();
                        return [3 /*break*/, 1];
                    case 4: return [3 /*break*/, 7];
                    case 5:
                        e_2_1 = _d.sent();
                        e_2 = { error: e_2_1 };
                        return [3 /*break*/, 7];
                    case 6:
                        try {
                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                        }
                        finally { if (e_2) throw e_2.error; }
                        return [7 /*endfinally*/];
                    case 7: return [2 /*return*/];
                }
            });
        });
    };
    MvcHandlerAdapter.prototype.handle = function () {
        return __awaiter(this, void 0, void 0, function () {
            var ctx, path, routeMetadata;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        ctx = node_1.Context.getCurrent();
                        path = ctx.request.path;
                        return [4 /*yield*/, this.routeMetadataMatcher.match()];
                    case 1:
                        routeMetadata = _a.sent();
                        if (!routeMetadata) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.doHandle(routeMetadata)];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 4];
                    case 3: throw new node_2.NotFoundAndContinueError("No mapping found: " + ctx.request.method + " " + path);
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    MvcHandlerAdapter.prototype.doHandle = function (metadata, err) {
        return __awaiter(this, void 0, void 0, function () {
            var args, methodMetadata, target, model, error_1, errorMetadata;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.resolveMethodArgs(metadata)];
                    case 1:
                        args = _a.sent();
                        if (err) {
                            args = __spread([err], args);
                        }
                        methodMetadata = metadata.methodMetadata;
                        target = methodMetadata.target;
                        _a.label = 2;
                    case 2:
                        _a.trys.push([2, 5, , 10]);
                        return [4 /*yield*/, this.pipeManager.apply({ target: target, method: methodMetadata.key }, args)];
                    case 3:
                        _a.sent();
                        return [4 /*yield*/, target[methodMetadata.key].apply(target, __spread(args))];
                    case 4:
                        model = _a.sent();
                        return [3 /*break*/, 10];
                    case 5:
                        error_1 = _a.sent();
                        if (!!err) return [3 /*break*/, 8];
                        return [4 /*yield*/, this.getErrorMetadata(error_1)];
                    case 6:
                        errorMetadata = _a.sent();
                        if (!errorMetadata.viewMetadata.viewName) {
                            errorMetadata.viewMetadata.viewName = metadata.viewMetadata.viewName;
                        }
                        return [4 /*yield*/, this.doHandle(errorMetadata, error_1)];
                    case 7:
                        _a.sent();
                        return [3 /*break*/, 9];
                    case 8: throw error_1;
                    case 9: return [3 /*break*/, 10];
                    case 10:
                        if (!model) return [3 /*break*/, 12];
                        return [4 /*yield*/, this.viewResolver.resolve(metadata, model)];
                    case 11:
                        _a.sent();
                        _a.label = 12;
                    case 12: return [4 /*yield*/, this.resolveResponse(metadata)];
                    case 13:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    MvcHandlerAdapter.prototype.getErrorMetadata = function (error) {
        return __awaiter(this, void 0, void 0, function () {
            var routeMetadata;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.routeMetadataMatcher.match(error)];
                    case 1:
                        routeMetadata = _a.sent();
                        if (routeMetadata) {
                            return [2 /*return*/, routeMetadata];
                        }
                        throw error;
                }
            });
        });
    };
    MvcHandlerAdapter.prototype.canHandle = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        _b = (_a = this.requestMatcher).match;
                        return [4 /*yield*/, this.pathResolver.resolve(this.mvcPath)];
                    case 1: return [2 /*return*/, _b.apply(_a, [_c.sent()])];
                }
            });
        });
    };
    __decorate([
        core_1.Autowired(resolver_1.MethodArgsResolverProvider),
        __metadata("design:type", resolver_1.MethodArgsResolverProvider)
    ], MvcHandlerAdapter.prototype, "methodArgsResolverProvider", void 0);
    __decorate([
        core_1.Autowired(resolver_1.ResponseResolverProvider),
        __metadata("design:type", resolver_1.ResponseResolverProvider)
    ], MvcHandlerAdapter.prototype, "responseResolverProvider", void 0);
    __decorate([
        core_1.Autowired(resolver_1.ViewResolver),
        __metadata("design:type", Object)
    ], MvcHandlerAdapter.prototype, "viewResolver", void 0);
    __decorate([
        core_1.Autowired(node_1.RequestMatcher),
        __metadata("design:type", Object)
    ], MvcHandlerAdapter.prototype, "requestMatcher", void 0);
    __decorate([
        core_1.Autowired(web_1.PathResolver),
        __metadata("design:type", Object)
    ], MvcHandlerAdapter.prototype, "pathResolver", void 0);
    __decorate([
        core_1.Autowired(core_2.PipeManager),
        __metadata("design:type", Object)
    ], MvcHandlerAdapter.prototype, "pipeManager", void 0);
    __decorate([
        core_1.Value(common_1.MVC_PATH),
        __metadata("design:type", String)
    ], MvcHandlerAdapter.prototype, "mvcPath", void 0);
    __decorate([
        core_1.Autowired(handler_protocol_1.RouteMetadataMatcher),
        __metadata("design:type", Object)
    ], MvcHandlerAdapter.prototype, "routeMetadataMatcher", void 0);
    MvcHandlerAdapter = __decorate([
        core_1.Component(node_1.HandlerAdapter)
    ], MvcHandlerAdapter);
    return MvcHandlerAdapter;
}());
exports.MvcHandlerAdapter = MvcHandlerAdapter;
//# sourceMappingURL=handler-adapter.js.map