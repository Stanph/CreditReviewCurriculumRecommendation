"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@malagu/core");
var handler_protocol_1 = require("./handler-protocol");
var node_1 = require("@malagu/web/lib/node");
exports.PATH_PARMAS_ATTR = 'pathParams';
var RouteMetadataMatcherImpl = /** @class */ (function () {
    function RouteMetadataMatcherImpl() {
    }
    RouteMetadataMatcherImpl.prototype.match = function (error) {
        return __awaiter(this, void 0, void 0, function () {
            var route, metadata, _a, _b, entry, request, pathMap, pathMap_1, pathMap_1_1, entry, _c, p, metadata, pathParams, e_1_1;
            var e_2, _d, e_1, _e;
            return __generator(this, function (_f) {
                switch (_f.label) {
                    case 0: return [4 /*yield*/, this.routeProvider.provide()];
                    case 1:
                        route = _f.sent();
                        if (!error) return [3 /*break*/, 2];
                        metadata = route.errorMapping.get(error.constructor);
                        if (metadata) {
                            return [2 /*return*/, metadata];
                        }
                        else {
                            try {
                                for (_a = __values(route.errorMapping), _b = _a.next(); !_b.done; _b = _a.next()) {
                                    entry = _b.value;
                                    if (error instanceof entry[0]) {
                                        return [2 /*return*/, entry[1]];
                                    }
                                }
                            }
                            catch (e_2_1) { e_2 = { error: e_2_1 }; }
                            finally {
                                try {
                                    if (_b && !_b.done && (_d = _a.return)) _d.call(_a);
                                }
                                finally { if (e_2) throw e_2.error; }
                            }
                        }
                        return [3 /*break*/, 10];
                    case 2:
                        request = node_1.Context.getRequest();
                        pathMap = route.mapping.get(request.method.toLowerCase());
                        if (!pathMap) return [3 /*break*/, 10];
                        _f.label = 3;
                    case 3:
                        _f.trys.push([3, 8, 9, 10]);
                        pathMap_1 = __values(pathMap), pathMap_1_1 = pathMap_1.next();
                        _f.label = 4;
                    case 4:
                        if (!!pathMap_1_1.done) return [3 /*break*/, 7];
                        entry = pathMap_1_1.value;
                        _c = __read(entry, 2), p = _c[0], metadata = _c[1];
                        return [4 /*yield*/, this.requestMatcher.match(p)];
                    case 5:
                        pathParams = _f.sent();
                        if (pathParams) {
                            node_1.Context.setAttr(exports.PATH_PARMAS_ATTR, pathParams);
                            return [2 /*return*/, metadata];
                        }
                        _f.label = 6;
                    case 6:
                        pathMap_1_1 = pathMap_1.next();
                        return [3 /*break*/, 4];
                    case 7: return [3 /*break*/, 10];
                    case 8:
                        e_1_1 = _f.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 10];
                    case 9:
                        try {
                            if (pathMap_1_1 && !pathMap_1_1.done && (_e = pathMap_1.return)) _e.call(pathMap_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                        return [7 /*endfinally*/];
                    case 10: return [2 /*return*/];
                }
            });
        });
    };
    __decorate([
        core_1.Autowired(handler_protocol_1.RouteProvider),
        __metadata("design:type", Object)
    ], RouteMetadataMatcherImpl.prototype, "routeProvider", void 0);
    __decorate([
        core_1.Autowired(node_1.RequestMatcher),
        __metadata("design:type", Object)
    ], RouteMetadataMatcherImpl.prototype, "requestMatcher", void 0);
    RouteMetadataMatcherImpl = __decorate([
        core_1.Component(handler_protocol_1.RouteMetadataMatcher)
    ], RouteMetadataMatcherImpl);
    return RouteMetadataMatcherImpl;
}());
exports.RouteMetadataMatcherImpl = RouteMetadataMatcherImpl;
//# sourceMappingURL=route-metadata-matcher.js.map