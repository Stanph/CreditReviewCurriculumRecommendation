export declare type StrOrRegex = string | RegExp;
export declare type RouteOptions = StrOrRegex | {
    path: StrOrRegex;
} | {
    options: Object;
    path: StrOrRegex;
} & Object;
export interface MethodMetadata {
    options: RouteOptions;
    target: any;
    method: string;
    key: string;
    descriptor: TypedPropertyDescriptor<Function>;
}
export interface MethodDecorator {
    (method: string, options?: RouteOptions): (target: any, key: string, descriptor: TypedPropertyDescriptor<Function>) => void;
}
export interface HandlerDecorator {
    (target: any, key: string, descriptor: TypedPropertyDescriptor<Function>): void;
}
export declare function Get(options?: RouteOptions): HandlerDecorator;
export declare function Post(options?: RouteOptions): HandlerDecorator;
export declare function Put(options?: RouteOptions): HandlerDecorator;
export declare function Patch(options?: RouteOptions): HandlerDecorator;
export declare function Head(options?: RouteOptions): HandlerDecorator;
export declare function Delete(options?: RouteOptions): HandlerDecorator;
export declare function Options(options?: RouteOptions): HandlerDecorator;
export declare const Method: MethodDecorator;
//# sourceMappingURL=method.d.ts.map