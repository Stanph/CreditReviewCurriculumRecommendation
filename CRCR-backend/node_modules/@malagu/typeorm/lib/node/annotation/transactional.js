"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var common_1 = require("../../common");
var typeorm_1 = require("typeorm");
var context_1 = require("../context");
var Propagation;
(function (Propagation) {
    Propagation[Propagation["Required"] = 0] = "Required";
    Propagation[Propagation["RequiresNew"] = 1] = "RequiresNew";
})(Propagation = exports.Propagation || (exports.Propagation = {}));
var TransactionalOption;
(function (TransactionalOption) {
    function is(option) {
        return option && (option.name !== undefined || option.isolation !== undefined || option.readOnly !== undefined);
    }
    TransactionalOption.is = is;
})(TransactionalOption = exports.TransactionalOption || (exports.TransactionalOption = {}));
exports.Transactional = function (nameOrTransactionalOption) {
    var _a = getTransactionalOption(nameOrTransactionalOption), name = _a.name, isolation = _a.isolation, propagation = _a.propagation, readOnly = _a.readOnly;
    return function (target, methodName, descriptor) {
        var originalMethod = descriptor.value;
        descriptor.value = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return __awaiter(this, void 0, void 0, function () {
                var em, callback;
                var _this = this;
                return __generator(this, function (_a) {
                    if (propagation === Propagation.Required) {
                        em = context_1.OrmContext.getEntityManager(name);
                        if (em && em.queryRunner && (em.queryRunner.isTransactionActive || readOnly)) {
                            return [2 /*return*/, originalMethod.apply(this, args)];
                        }
                    }
                    callback = function (entityManager) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    context_1.OrmContext.pushEntityManager(name, entityManager);
                                    _a.label = 1;
                                case 1:
                                    _a.trys.push([1, , 3, 4]);
                                    return [4 /*yield*/, originalMethod.apply(this, args)];
                                case 2: return [2 /*return*/, _a.sent()];
                                case 3:
                                    context_1.OrmContext.popEntityManager(name);
                                    return [7 /*endfinally*/];
                                case 4: return [2 /*return*/];
                            }
                        });
                    }); };
                    if (readOnly) {
                        return [2 /*return*/, callback(typeorm_1.getConnection(name).manager)];
                    }
                    else if (isolation) {
                        return [2 /*return*/, typeorm_1.getConnection(name).manager.transaction(isolation, callback)];
                    }
                    else {
                        return [2 /*return*/, typeorm_1.getConnection(name).manager.transaction(callback)];
                    }
                    return [2 /*return*/];
                });
            });
        };
    };
};
function getTransactionalOption(nameOrTransactionalOption) {
    var defaultOption = {
        name: common_1.DEFAULT_CONNECTION_NAME,
        propagation: Propagation.Required,
        readOnly: false
    };
    var option = defaultOption;
    if (TransactionalOption.is(nameOrTransactionalOption)) {
        option = __assign(__assign({}, defaultOption), nameOrTransactionalOption);
    }
    else if (nameOrTransactionalOption) {
        option = __assign(__assign({}, defaultOption), { name: nameOrTransactionalOption });
    }
    return option;
}
exports.getTransactionalOption = getTransactionalOption;
//# sourceMappingURL=transactional.js.map