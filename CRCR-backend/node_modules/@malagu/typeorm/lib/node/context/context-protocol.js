"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var node_1 = require("@malagu/web/lib/node");
var common_1 = require("../../common");
exports.CURRENT_ORM_CONTEXT_REQUEST_KEY = 'CurrentOrmContextRequest';
var OrmContext;
(function (OrmContext) {
    function getEntityManager(name) {
        if (name === void 0) { name = common_1.DEFAULT_CONNECTION_NAME; }
        var entityManagerMap = node_1.Context.getAttr(exports.CURRENT_ORM_CONTEXT_REQUEST_KEY, node_1.AttributeScope.Request);
        if (entityManagerMap) {
            var entityManagers = entityManagerMap.get(name);
            if (entityManagers && entityManagers.length > 0) {
                return entityManagers[entityManagers.length - 1];
            }
        }
        return undefined;
    }
    OrmContext.getEntityManager = getEntityManager;
    function getRepository(target, name) {
        return getEntityManager(name).getRepository(target);
    }
    OrmContext.getRepository = getRepository;
    function getTreeRepository(target, name) {
        return getEntityManager(name).getTreeRepository(target);
    }
    OrmContext.getTreeRepository = getTreeRepository;
    function getMongoRepository(target, name) {
        return getEntityManager(name).getMongoRepository(target);
    }
    OrmContext.getMongoRepository = getMongoRepository;
    function getCustomRepository(customRepository, name) {
        return getEntityManager(name).getCustomRepository(customRepository);
    }
    OrmContext.getCustomRepository = getCustomRepository;
    function pushEntityManager(name, entityManager) {
        var entityManagerMap = node_1.Context.getAttr(exports.CURRENT_ORM_CONTEXT_REQUEST_KEY, node_1.AttributeScope.Request);
        if (!entityManagerMap) {
            entityManagerMap = new Map();
            entityManagerMap.set(name, []);
            node_1.Context.setAttr(exports.CURRENT_ORM_CONTEXT_REQUEST_KEY, entityManagerMap);
        }
        entityManagerMap.get(name).push(entityManager);
    }
    OrmContext.pushEntityManager = pushEntityManager;
    function popEntityManager(name) {
        var entityManagerMap = node_1.Context.getAttr(exports.CURRENT_ORM_CONTEXT_REQUEST_KEY, node_1.AttributeScope.Request);
        if (entityManagerMap) {
            var entityManagers = entityManagerMap.get(name);
            if (entityManagers && entityManagers.length > 0) {
                return entityManagers.pop();
            }
        }
    }
    OrmContext.popEntityManager = popEntityManager;
})(OrmContext = exports.OrmContext || (exports.OrmContext = {}));
//# sourceMappingURL=context-protocol.js.map