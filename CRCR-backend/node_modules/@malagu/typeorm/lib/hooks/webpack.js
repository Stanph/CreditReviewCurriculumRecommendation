"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
var cli_1 = require("@malagu/cli");
var FilterWarningsPlugin = require('webpack-filter-warnings-plugin');
exports.default = (function (context) {
    var e_1, _a;
    var configurations = context.configurations;
    try {
        for (var configurations_1 = __values(configurations), configurations_1_1 = configurations_1.next(); !configurations_1_1.done; configurations_1_1 = configurations_1.next()) {
            var c = configurations_1_1.value;
            if (c.name === cli_1.BACKEND_TARGET) {
                c.plugins = c.plugins || [];
                c.plugins.push(new FilterWarningsPlugin({
                    exclude: [/typeorm-aurora-data-api-driver/, /mongodb/, /mssql/, /mysql/, /oracledb/, /pg/, /pg-native/, /pg-query-stream/, /sql.js/,
                        /redis/, /sqlite3/, /eact-native-sqlite-storage/, /cli-highlight/, /Critical dependency/, /@sap\/hdbext/]
                }));
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (configurations_1_1 && !configurations_1_1.done && (_a = configurations_1.return)) _a.call(configurations_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
});
//# sourceMappingURL=webpack.js.map