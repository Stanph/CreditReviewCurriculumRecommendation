export declare const Session: unique symbol;
export declare const SessionStore: unique symbol;
export declare const SessionManager: unique symbol;
export declare const SessionStrategy: unique symbol;
export declare const COOKIE_EXP_DATE: Date;
export declare const SESSION_MIDDLEWARE_PRIORITY: number;
export interface Session {
    id: string;
    isNew: boolean;
    expire: number;
    maxAge: number;
    readonly changed: boolean;
    [key: string]: any;
    toJSON(): any;
}
export interface SessionStore {
    get(id: string): Promise<Session | undefined>;
    set(session: Session): Promise<void>;
    remove(id: string): Promise<void>;
}
export interface SessionManager {
    get(): Promise<Session>;
    remove(): Promise<void>;
    commit(): Promise<void>;
}
export interface SessionStrategy {
    valid(session: Session): Promise<boolean>;
    create(obj?: any): Promise<Session>;
    shouldSaveSession(session: Session): Promise<boolean>;
}
//# sourceMappingURL=session-protocol.d.ts.map